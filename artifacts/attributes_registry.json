{
    "abi": [
        {
            "members": [
                {
                    "name": "low",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "high",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "Uint256",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "color_nft_material",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "x_y_z",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "ShapeItem",
            "size": 2,
            "type": "struct"
        },
        {
            "members": [
                {
                    "name": "token_id",
                    "offset": 0,
                    "type": "felt"
                },
                {
                    "name": "qty",
                    "offset": 1,
                    "type": "felt"
                }
            ],
            "name": "FTSpec",
            "size": 2,
            "type": "struct"
        },
        {
            "data": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "previousAdmin",
                    "type": "felt"
                },
                {
                    "name": "newAdmin",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "getAdmin_",
            "outputs": [
                {
                    "name": "admin",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getImplementation_",
            "outputs": [
                {
                    "name": "implementation",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_implementation",
                    "type": "felt"
                }
            ],
            "name": "upgradeImplementation_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "new_admin",
                    "type": "felt"
                }
            ],
            "name": "setRootAdmin_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getSetAddress_",
            "outputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "address",
                    "type": "felt"
                }
            ],
            "name": "setSetAddress_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "collection_id",
                    "type": "felt"
                },
                {
                    "name": "contract",
                    "type": "felt"
                },
                {
                    "name": "admin",
                    "type": "felt"
                },
                {
                    "name": "params",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "CollectionCreated",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "collection_id",
                    "type": "felt"
                },
                {
                    "name": "params",
                    "type": "felt"
                },
                {
                    "name": "admin_or_contract",
                    "type": "felt"
                }
            ],
            "name": "create_collection_",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "attribute_id",
                    "type": "felt"
                },
                {
                    "name": "initial_balance",
                    "type": "felt"
                }
            ],
            "name": "increase_attribute_balance_",
            "outputs": [],
            "type": "function"
        },
        {
            "data": [
                {
                    "name": "_owner",
                    "type": "felt"
                },
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_approved",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_id",
                    "type": "Uint256"
                },
                {
                    "name": "_value",
                    "type": "Uint256"
                }
            ],
            "keys": [],
            "name": "TransferSingle",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "_operator",
                    "type": "felt"
                },
                {
                    "name": "_from",
                    "type": "felt"
                },
                {
                    "name": "_to",
                    "type": "felt"
                },
                {
                    "name": "_ids_len",
                    "type": "felt"
                },
                {
                    "name": "_ids",
                    "type": "Uint256*"
                },
                {
                    "name": "_values_len",
                    "type": "felt"
                },
                {
                    "name": "_values",
                    "type": "Uint256*"
                }
            ],
            "keys": [],
            "name": "TransferBatch",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "set_token_id",
                    "type": "Uint256"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AttributeAssigned",
            "type": "event"
        },
        {
            "data": [
                {
                    "name": "set_token_id",
                    "type": "Uint256"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                }
            ],
            "keys": [],
            "name": "AttributeRemoved",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "name": "set_owner",
                    "type": "felt"
                },
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attributes_len",
                    "type": "felt"
                },
                {
                    "name": "attributes",
                    "type": "felt*"
                },
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "fts_len",
                    "type": "felt"
                },
                {
                    "name": "fts",
                    "type": "FTSpec*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "name": "assign_attributes",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "set_owner",
                    "type": "felt"
                },
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                },
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "fts_len",
                    "type": "felt"
                },
                {
                    "name": "fts",
                    "type": "FTSpec*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "name": "assign_attribute",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "set_owner",
                    "type": "felt"
                },
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attributes_len",
                    "type": "felt"
                },
                {
                    "name": "attributes",
                    "type": "felt*"
                }
            ],
            "name": "remove_attributes",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "set_owner",
                    "type": "felt"
                },
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                }
            ],
            "name": "remove_attribute",
            "outputs": [],
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                }
            ],
            "name": "has_attribute",
            "outputs": [
                {
                    "name": "has_attribute",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "owner",
                    "type": "felt"
                }
            ],
            "name": "total_balance",
            "outputs": [
                {
                    "name": "total_balance",
                    "type": "felt"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "name": "set_token_id",
                    "type": "felt"
                },
                {
                    "name": "attribute_id",
                    "type": "felt"
                }
            ],
            "name": "token_uri",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": 486,
                "selector": "0x1c1cd14c05e4a44823c16992015b964b20878ae4c0f212b03d9d4e4d0fd46b"
            },
            {
                "offset": 907,
                "selector": "0x5b2f562ee6b5b582f453ce873d05d680bf98219b7826dee66b2bd7e0e45ef1"
            },
            {
                "offset": 551,
                "selector": "0x6a442f907de33e1186fb3c14316bccd88bc6ad0c5bb6a965763cef4fe61861"
            },
            {
                "offset": 963,
                "selector": "0x6d1c1750f33a6ba6d077a5634f433ca7d7016da8f3c31e6d55d1e987889637"
            },
            {
                "offset": 455,
                "selector": "0x7aad6fb4060fc2d6f6a5ac299b51c74b1a30fcd464539bf5c5d2c0281c2758"
            },
            {
                "offset": 1414,
                "selector": "0x88889fdd740438882ca171a518974d0c5250f47e340a789330ee628ac6504d"
            },
            {
                "offset": 1657,
                "selector": "0x9ddf7a6a702beac169ae95059fd3eb6fe442d192e8b74664a4e40debb78438"
            },
            {
                "offset": 1780,
                "selector": "0x10c403876c66c8baf909caa7fccd3cb58eddd85a32f3a10e5d5f423662d6c79"
            },
            {
                "offset": 1848,
                "selector": "0x17ba5a9b997bb92fc2f9c4d43bb8d7ae2e6d83581b5d0c285accb75e6362038"
            },
            {
                "offset": 640,
                "selector": "0x1a21f7301a20858459a3ba0dcf5ea261a13e6e33d7b38db7ecbe27abf59089b"
            },
            {
                "offset": 517,
                "selector": "0x1bb6c2e39d1a273be47a707e952919f26b31d536807f6faae5e0be51119a43e"
            },
            {
                "offset": 1914,
                "selector": "0x226ad7e84c1fe08eb4c525ed93cccadf9517670341304571e66f7c4f95cbe54"
            },
            {
                "offset": 615,
                "selector": "0x2590d896993b98c91c313ca0b46188a64792601f9ff24649d4ed412178aae1a"
            },
            {
                "offset": 1890,
                "selector": "0x2ea201af3d436c244bcfa95f8346e4f44f50d24a120330d53e0c7f761737274"
            },
            {
                "offset": 1576,
                "selector": "0x3651fe1f6fb2c1c8c20999a3596e0ef90bb0062bd892a2883e6dff09e4d7fda"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin"
                ],
                "end_pc": 339,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 24,
                        "offset": 29
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 338,
                "value": "Proxy: caller is not admin"
            },
            {
                "accessible_scopes": [
                    "contracts.vendor.openzeppelin.upgrades.library",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                    "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash"
                ],
                "end_pc": 379,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 28,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 376,
                "value": "Proxy: implementation hash cannot be zero"
            },
            {
                "accessible_scopes": [
                    "contracts.utilities.authorization",
                    "contracts.utilities.authorization._only"
                ],
                "end_pc": 408,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 29,
                        "offset": 7
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 404,
                "value": "You are not authorized to call this function"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.balance",
                    "contracts.library_erc1155.balance.ERC1155_balance",
                    "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance"
                ],
                "end_pc": 721,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 59,
                        "offset": 68
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 718,
                "value": "Mint would overflow balance"
            },
            {
                "accessible_scopes": [
                    "contracts.library_erc1155.balance",
                    "contracts.library_erc1155.balance.ERC1155_balance",
                    "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance"
                ],
                "end_pc": 742,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 60,
                        "offset": 68
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 737,
                "value": "Insufficient balance"
            },
            {
                "accessible_scopes": [
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections.create_collection_"
                ],
                "end_pc": 879,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 70,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 874,
                "value": "Collection already exists"
            },
            {
                "accessible_scopes": [
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections.create_collection_"
                ],
                "end_pc": 893,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 70,
                        "offset": 73
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 885,
                "value": "Invalid bits in collection parameters."
            },
            {
                "accessible_scopes": [
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections.increase_attribute_balance_"
                ],
                "end_pc": 943,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 76,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 941,
                "value": "Balance can only be increased on non-delegating collections"
            },
            {
                "accessible_scopes": [
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections",
                    "contracts.attributes_registry.collections.increase_attribute_balance_"
                ],
                "end_pc": 946,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 76,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 943,
                "value": "Cannot increase the balance of a collection without an admin"
            },
            {
                "accessible_scopes": [
                    "contracts.attributes_registry.attributes",
                    "contracts.attributes_registry.attributes",
                    "contracts.attributes_registry.attributes.assign_attribute"
                ],
                "end_pc": 1563,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 106,
                        "offset": 134
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1559,
                "value": "Would overflow balance"
            },
            {
                "accessible_scopes": [
                    "contracts.attributes_registry.attributes",
                    "contracts.attributes_registry.attributes",
                    "contracts.attributes_registry.attributes.remove_attribute"
                ],
                "end_pc": 1767,
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 115,
                        "offset": 134
                    },
                    "reference_ids": {}
                },
                "name": "error_message",
                "start_pc": 1761,
                "value": "Insufficient balance"
            }
        ],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "compiler_version": "0.11.0.1",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x43616c6c436f6e7472616374",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x7",
            "0x480280057ff98000",
            "0x480280067ff98000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x47657443616c6c657241646472657373",
            "0x400280007ffd7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f7261676552656164",
            "0x400280007ffc7fff",
            "0x400380017ffc7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x480280027ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x53746f726167655772697465",
            "0x400280007ffb7fff",
            "0x400380017ffb7ffc",
            "0x400380027ffb7ffd",
            "0x482680017ffb8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x456d69744576656e74",
            "0x400280007ff97fff",
            "0x400380017ff97ffa",
            "0x400380027ff97ffb",
            "0x400380037ff97ffc",
            "0x400380047ff97ffd",
            "0x482680017ff98000",
            "0x5",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x3ffffffffffffffffffffffffffffff",
            "0x480280017ffc8000",
            "0x48307fff80007ffe",
            "0x400280027ffc7fff",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x482680017ffc8000",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x484480017fff8000",
            "0x100000000000000000000000000000000",
            "0x480280007ffc8000",
            "0x40317fff7ffe7ffd",
            "0x480280017ffc8000",
            "0x482480017fff8000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x20680017fff7fff",
            "0xb",
            "0x482680017ffc8000",
            "0x2",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
            "0x10780017fff7fff",
            "0x9",
            "0x482680017ffc8000",
            "0x2",
            "0x480280017ffc8000",
            "0x480680017fff8000",
            "0x800000000000010ffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
            "0x480280017ffc8000",
            "0x480280007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0x10",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff98",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff92",
            "0x482680017ffd8000",
            "0x11000000000000000000000000000000000000000000000101",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x20680017fff7fff",
            "0xc",
            "0x40780017fff7fff",
            "0xa",
            "0x480680017fff8000",
            "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff83",
            "0x10780017fff7fff",
            "0x8",
            "0x40780017fff7fff",
            "0xb",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7b",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff22",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x2db340e6c609371026731f47050d3976552c89b4fbb012941663841c59d1af3",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1c",
            "0x40137fff7fff8001",
            "0x4003800080017ffd",
            "0x4826800180018000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4b",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0a",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x120650e571756796b93f65826a80b3511d4f3a06808e82cb37407903b09d995",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff04",
            "0x40137fff7fff8001",
            "0x4003800080017ffc",
            "0x4003800180017ffd",
            "0x4826800180018000",
            "0x2",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff32",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3f1abe37754ee6ca6d8dfa1036089f78a07ebe8f3b1e336cdbf3274d25becd0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff13",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0d",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xee2b6c840729051a0d06a623ff093dcc01e03f2e0c0e07114ac2440394b889",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef5",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeef",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeda",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x40127fe87fff7fff",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd2",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff8",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x48127fe77fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff84",
            "0x48127ffe7fff8000",
            "0x48127fe37fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecd",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa2",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
            "0x48127ffe7fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9a",
            "0x48287ffd80007fff",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe88",
            "0x482480017fff8000",
            "0x410a4fd433a2d01c0f2ca2aa0c9a19c77016afe135de934ea696bf40bef7c1f",
            "0x482480017ffe8000",
            "0x3b04ac990d5707170db3baee01793ea0c63ddf2301338cf3915ae5cca436636",
            "0x48507fff7ffe8000",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482480017ffc8000",
            "0x26209950d1f1cc07bd4ee1594a56fc46b9bf3b00fbe74fb331233cdf0ace5f9",
            "0x20680017fff7fff",
            "0x6",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff96",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa3",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7e",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa4",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4a",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff77",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff82",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe28",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff40",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x3cadaf481dda01da921c159bddad4d0df50db34e6ac0052a7994731899d9d5c",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde7",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde1",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x48127ff47fff8000",
            "0x48127ff47fff8000",
            "0x48127ffb7fff8000",
            "0x480280037ffb8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff23",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x5",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x1b7e24dbc7e9f5269168b3096497c70e05d3998167db351e2ceab75a8ae9f06",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd67",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd64",
            "0x480a7ffb7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe12",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7a",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd72",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x48287ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffddc",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd7fe28000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x48127ffe7fff8000",
            "0x48287ffd80007ffe",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc7",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48287ffd80007fe0",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb7",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd08",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0xfca650bfd622aeae91aa1471499a054e4c7d3f0d75fbcb98bdb3bbb0358b0c",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd02",
            "0x40137fff7fff8001",
            "0x4003800080017ffa",
            "0x4003800180017ffb",
            "0x4003800280017ffc",
            "0x4003800380017ffd",
            "0x4826800180018000",
            "0x4",
            "0x480a7ff87fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2e",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xcb",
            "0x40137fff7fff8000",
            "0x40137ffe7fff8001",
            "0x40137ffc7fff8002",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x1d",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x48127ffe7fff8000",
            "0x48127fdf7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80027fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1744945e87e2f497ba9c58d6a2463f17b751ab4816d492c26cedfb87228d381",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffccf",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7d",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce6",
            "0x48127ffe7fff8000",
            "0x482480017ff78000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce1",
            "0x48127ffe7fff8000",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ff57fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd9",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd4",
            "0x48127ff07fff8000",
            "0x48127ff07fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe35",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd5",
            "0x400680017fff7ffe",
            "0x0",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff21",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ff67fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x400000000000000000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd30",
            "0x48127fda7fff8000",
            "0x48127fda7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x48127fa17fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8b",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x30",
            "0x1104800180018000",
            "0x3a",
            "0x40137ffc7fff8000",
            "0x400680017fff7fff",
            "0x0",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc96",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd5",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0c",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb8",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff58",
            "0x480a7ffb7fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea6",
            "0x482480017fff8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x20680017fff7fff",
            "0xa",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ff27fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ff37fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5b",
            "0x40780017fff7fff",
            "0x2",
            "0x40127ffc7fff7fff",
            "0x40127ffd7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbed",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x182d859c0807ba9db63baf8b9d9fdbfeb885d820be6e206b9dab626d995c433",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe7",
            "0x40137fff7fff8001",
            "0x4003800080017ff7",
            "0x4003800180017ff8",
            "0x4003800280017ff9",
            "0x4003800380017ffa",
            "0x4003800480017ffb",
            "0x4003800580017ffc",
            "0x4003800680017ffd",
            "0x4826800180018000",
            "0x7",
            "0x480a7ff57fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc10",
            "0x480a7ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcb",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127fd77fff8000",
            "0x48127fd77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x48127ffe7fff8000",
            "0x48127fdc7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48297ffb80007ffa",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbfa",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf7",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf4",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe81",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe69",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbc3",
            "0x48127ffe7fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc5",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x8e960d9359dafb172379eb3b0d0722a486f822978d4020bae63b7df8b4ddef",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb91",
            "0x480a7ffc7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc3f",
            "0x48127fe17fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
            "0x480a7ffa7fff8000",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba8",
            "0x48127ffe7fff8000",
            "0x48127ff57fff8000",
            "0x48127ff57fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x480a7ff97fff8000",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba1",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb67",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0xa0d379080ae9254e6681dba975bd7a906deb51562dab28a7d1364f6e665b3c",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb61",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8e",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb4d",
            "0x40137fff7fff8000",
            "0x480680017fff8000",
            "0x128dd26c50ed2fdab8dfa967443442d2587fe2304cfba78ff3a017c0e4f04ce",
            "0x4002800080007fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb47",
            "0x40137fff7fff8001",
            "0x4003800080017ffb",
            "0x4003800180017ffc",
            "0x4003800280017ffd",
            "0x4826800180018000",
            "0x3",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x480a80007fff8000",
            "0x4828800180007ffc",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb74",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff33",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc0",
            "0x48127ffe7fff8000",
            "0x48127fe07fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1f",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc6",
            "0x48127ffe7fff8000",
            "0x48127fe07fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb0b",
            "0x40137fff7fff8000",
            "0x4003800080007ff5",
            "0x4003800180007ff6",
            "0x4003800280007ff7",
            "0x4003800380007ff8",
            "0x400380007ff37ff8",
            "0x402780017ff38001",
            "0x1",
            "0x4826800180008000",
            "0x4",
            "0x484680017ff88000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x4",
            "0x480a7ff97fff8000",
            "0x484680017ff88000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb00",
            "0x4003800080027ffa",
            "0x4003800080017ffa",
            "0x4027800180018003",
            "0x1",
            "0x4826800180028000",
            "0x1",
            "0x484680017ffa8000",
            "0x2",
            "0x40317fff7ffe8004",
            "0x4826800180028000",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x484680017ffa8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf0",
            "0x4003800080047ffc",
            "0x4003800080037ffc",
            "0x4027800180038005",
            "0x1",
            "0x4826800180048000",
            "0x1",
            "0x40297ffc7fff8006",
            "0x4826800180048000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae3",
            "0x480a7ff27fff8000",
            "0x480a7ff47fff8000",
            "0x480680017fff8000",
            "0x3651fe1f6fb2c1c8c20999a3596e0ef90bb0062bd892a2883e6dff09e4d7fda",
            "0x4829800080008006",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaea",
            "0x48127ffd7fff8000",
            "0x480a80057fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacb",
            "0x40137fff7fff8000",
            "0x4003800080007ffb",
            "0x4003800180007ffc",
            "0x4003800280007ffd",
            "0x4826800180008000",
            "0x3",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x10c403876c66c8baf909caa7fccd3cb58eddd85a32f3a10e5d5f423662d6c79",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad5",
            "0x48127ffd7fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffab6",
            "0x40137fff7fff8000",
            "0x4003800080007ffc",
            "0x4003800180007ffd",
            "0x4826800180008000",
            "0x2",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1e6d3cbfeefef1d609db7db9516768ba077a394d54e97c2fcc92f0e18117083",
            "0x4828800080007ffc",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac1",
            "0x482480017fff8000",
            "0x1",
            "0x40307ffe7ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480080007ffc8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ff6",
            "0x7",
            "0x480a7ff07fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff07fff8000",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480280007ff78000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x52",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x482680017ff68000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ff78000",
            "0x1",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdf",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080027ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080037ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x4",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x480080007fe58000",
            "0x482480017fe48000",
            "0x1",
            "0x480080007fe98000",
            "0x482480017fe88000",
            "0x1",
            "0x480080007fed8000",
            "0x482480017fec8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa7",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480a7ff57fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7c",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa79",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa76",
            "0x480a7ff17fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa52",
            "0x48127ffe7fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff47fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc81",
            "0x40127fff7fff7fe3",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff37fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf9",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe03",
            "0x40137ffb7fff8000",
            "0x40137ffc7fff8001",
            "0x20680017fff7fff",
            "0x12",
            "0x48127ffa7fff8000",
            "0x480a80007fff8000",
            "0x48127ffb7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5b",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x10780017fff7fff",
            "0x13",
            "0x48127ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef1",
            "0x48127ffe7fff8000",
            "0x480a80007fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80017fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebe",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff67fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe69",
            "0x482480017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa92",
            "0x48127fe47fff8000",
            "0x48127fe47fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ff67fff8000",
            "0x482480017fe38000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6b",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127f6b7fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280037ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x4",
            "0x480280037ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080027ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x3",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x480280037ffd8000",
            "0x482680017ffd8000",
            "0x4",
            "0x480080007fea8000",
            "0x482480017fe98000",
            "0x1",
            "0x480080007fee8000",
            "0x482480017fed8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff74",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x7",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x2a",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280027ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x3",
            "0x480280027ffd8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x1",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x482680017ffd8000",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9ab",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a8",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9a5",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff981",
            "0x48127ffe7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ffa7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb0",
            "0x40127fff7fff7fe3",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ff97fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd28",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd32",
            "0x40137ffc7fff8000",
            "0x20680017fff7fff",
            "0x12",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8b",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x10780017fff7fff",
            "0xd",
            "0x48127ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe67",
            "0x48127ffe7fff8000",
            "0x48127fe07fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480a80007fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe08",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9f",
            "0x48127ffe7fff8000",
            "0x482480017ffe8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9c6",
            "0x48127fe27fff8000",
            "0x48127fe27fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017fe18000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9f",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x48127f697fff8000",
            "0x48127ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9b",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcca",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd4",
            "0x20680017fff7fff",
            "0xf",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd6",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127faf7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x48127ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe23",
            "0x48127ffd7fff8000",
            "0x48127fdf7fff8000",
            "0x48127fdf7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2d",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x2",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff5",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480280037ffb8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "12": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "20": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "23": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 2,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "31": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.call_contract"
                    ],
                    "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 3,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 2
                        }
                    }
                }
            ],
            "39": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.get_caller_address"
                    ],
                    "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 3
                        }
                    }
                }
            ],
            "47": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_read"
                    ],
                    "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 5,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 4
                        }
                    }
                }
            ],
            "56": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.storage_write"
                    ],
                    "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 6,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 5
                        }
                    }
                }
            ],
            "66": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.syscalls",
                        "starkware.starknet.common.syscalls.emit_event"
                    ],
                    "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 6
                        }
                    }
                }
            ],
            "69": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 7
                        }
                    }
                }
            ],
            "74": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 8
                        }
                    }
                }
            ],
            "83": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_250_bit"
                    ],
                    "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 11,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_250_bit.high": 11,
                            "starkware.cairo.common.math.assert_250_bit.low": 10,
                            "starkware.cairo.common.math.assert_250_bit.value": 9
                        }
                    }
                }
            ],
            "96": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert ids.MAX_HIGH < 2**128 and ids.MAX_LOW < 2**128\nassert PRIME - 1 == ids.MAX_HIGH * 2**128 + ids.MAX_LOW\nassert_integer(ids.value)\nids.low = ids.value & ((1 << 128) - 1)\nids.high = ids.value >> 128",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_felt.high": 14,
                            "starkware.cairo.common.math.split_felt.low": 13,
                            "starkware.cairo.common.math.split_felt.value": 12
                        }
                    }
                }
            ],
            "125": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 15,
                            "starkware.cairo.common.math.assert_le_felt.b": 16,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 17
                        }
                    }
                }
            ],
            "135": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "149": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "161": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "170": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 18,
                            "starkware.cairo.common.math.assert_lt_felt.b": 19
                        }
                    }
                }
            ],
            "183": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 1
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 20,
                            "starkware.starknet.common.storage.normalize_address.is_small": 21
                        }
                    }
                }
            ],
            "201": [
                {
                    "accessible_scopes": [
                        "starkware.starknet.common.storage",
                        "starkware.starknet.common.storage.normalize_address"
                    ],
                    "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 15,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.starknet.common.storage.normalize_address.addr": 20,
                            "starkware.starknet.common.storage.normalize_address.is_250": 22
                        }
                    }
                }
            ],
            "446": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getAdmin__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 32,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "477": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.getImplementation__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 35,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "526": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.upgradeImplementation_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 40,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "560": [
                {
                    "accessible_scopes": [
                        "contracts.upgrades.upgradable_mixin",
                        "contracts.upgrades.upgradable_mixin",
                        "__wrappers__",
                        "__wrappers__.setRootAdmin_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 44,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "606": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_set",
                        "contracts.ecosystem.to_set",
                        "__wrappers__",
                        "__wrappers__.getSetAddress__encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 49,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "649": [
                {
                    "accessible_scopes": [
                        "contracts.ecosystem.to_set",
                        "contracts.ecosystem.to_set",
                        "__wrappers__",
                        "__wrappers__.setSetAddress_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 54,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "919": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.collections",
                        "contracts.attributes_registry.collections",
                        "__wrappers__",
                        "__wrappers__.create_collection_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 73,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "974": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.collections",
                        "contracts.attributes_registry.collections",
                        "__wrappers__",
                        "__wrappers__.increase_attribute_balance_"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 79,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1469": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.assign_attributes"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 103,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1622": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.assign_attribute"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 108,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1678": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.remove_attributes"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 113,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1792": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.remove_attribute"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 117,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1839": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.has_attribute_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 119,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1881": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.total_balance_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 123,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "1924": [
                {
                    "accessible_scopes": [
                        "contracts.attributes_registry.attributes",
                        "contracts.attributes_registry.attributes",
                        "__wrappers__",
                        "__wrappers__.token_uri"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 126,
                            "offset": 11
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "__main__.assign_attribute": {
                "destination": "contracts.attributes_registry.attributes.assign_attribute",
                "type": "alias"
            },
            "__main__.assign_attributes": {
                "destination": "contracts.attributes_registry.attributes.assign_attributes",
                "type": "alias"
            },
            "__main__.create_collection_": {
                "destination": "contracts.attributes_registry.collections.create_collection_",
                "type": "alias"
            },
            "__main__.getAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__main__.getImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__main__.getSetAddress_": {
                "destination": "contracts.ecosystem.to_set.getSetAddress_",
                "type": "alias"
            },
            "__main__.has_attribute": {
                "destination": "contracts.attributes_registry.attributes.has_attribute",
                "type": "alias"
            },
            "__main__.increase_attribute_balance_": {
                "destination": "contracts.attributes_registry.collections.increase_attribute_balance_",
                "type": "alias"
            },
            "__main__.remove_attribute": {
                "destination": "contracts.attributes_registry.attributes.remove_attribute",
                "type": "alias"
            },
            "__main__.remove_attributes": {
                "destination": "contracts.attributes_registry.attributes.remove_attributes",
                "type": "alias"
            },
            "__main__.setRootAdmin_": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__main__.setSetAddress_": {
                "destination": "contracts.ecosystem.to_set.setSetAddress_",
                "type": "alias"
            },
            "__main__.token_uri": {
                "destination": "contracts.attributes_registry.attributes.token_uri",
                "type": "alias"
            },
            "__main__.total_balance": {
                "destination": "contracts.attributes_registry.attributes.total_balance",
                "type": "alias"
            },
            "__main__.upgradeImplementation_": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.assign_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 1576,
                "type": "function"
            },
            "__wrappers__.assign_attribute.Args": {
                "full_name": "__wrappers__.assign_attribute.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assign_attribute.ImplicitArgs": {
                "full_name": "__wrappers__.assign_attribute.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assign_attribute.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.assign_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.assign_attribute.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.assign_attribute",
                "type": "alias"
            },
            "__wrappers__.assign_attribute_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.assign_attributes": {
                "decorators": [
                    "external"
                ],
                "pc": 1414,
                "type": "function"
            },
            "__wrappers__.assign_attributes.Args": {
                "full_name": "__wrappers__.assign_attributes.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assign_attributes.ImplicitArgs": {
                "full_name": "__wrappers__.assign_attributes.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.assign_attributes.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.assign_attributes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.assign_attributes.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.assign_attributes",
                "type": "alias"
            },
            "__wrappers__.assign_attributes_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.create_collection_": {
                "decorators": [
                    "external"
                ],
                "pc": 907,
                "type": "function"
            },
            "__wrappers__.create_collection_.Args": {
                "full_name": "__wrappers__.create_collection_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.create_collection_.ImplicitArgs": {
                "full_name": "__wrappers__.create_collection_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.create_collection_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.create_collection_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.create_collection_.__wrapped_func": {
                "destination": "contracts.attributes_registry.collections.create_collection_",
                "type": "alias"
            },
            "__wrappers__.create_collection__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 455,
                "type": "function"
            },
            "__wrappers__.getAdmin_.Args": {
                "full_name": "__wrappers__.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getAdmin_",
                "type": "alias"
            },
            "__wrappers__.getAdmin__encode_return": {
                "decorators": [],
                "pc": 446,
                "type": "function"
            },
            "__wrappers__.getAdmin__encode_return.Args": {
                "full_name": "__wrappers__.getAdmin__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(admin: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getAdmin__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getAdmin__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getAdmin__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 486,
                "type": "function"
            },
            "__wrappers__.getImplementation_.Args": {
                "full_name": "__wrappers__.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.getImplementation_",
                "type": "alias"
            },
            "__wrappers__.getImplementation__encode_return": {
                "decorators": [],
                "pc": 477,
                "type": "function"
            },
            "__wrappers__.getImplementation__encode_return.Args": {
                "full_name": "__wrappers__.getImplementation__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(implementation: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getImplementation__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getImplementation__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getImplementation__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.getSetAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 615,
                "type": "function"
            },
            "__wrappers__.getSetAddress_.Args": {
                "full_name": "__wrappers__.getSetAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSetAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.getSetAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSetAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.getSetAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_set.getSetAddress_",
                "type": "alias"
            },
            "__wrappers__.getSetAddress__encode_return": {
                "decorators": [],
                "pc": 606,
                "type": "function"
            },
            "__wrappers__.getSetAddress__encode_return.Args": {
                "full_name": "__wrappers__.getSetAddress__encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(address: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.getSetAddress__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.getSetAddress__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.getSetAddress__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.getSetAddress__encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.getSetAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.has_attribute": {
                "decorators": [
                    "view"
                ],
                "pc": 1848,
                "type": "function"
            },
            "__wrappers__.has_attribute.Args": {
                "full_name": "__wrappers__.has_attribute.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.has_attribute.ImplicitArgs": {
                "full_name": "__wrappers__.has_attribute.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.has_attribute.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.has_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.has_attribute.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.has_attribute",
                "type": "alias"
            },
            "__wrappers__.has_attribute_encode_return": {
                "decorators": [],
                "pc": 1839,
                "type": "function"
            },
            "__wrappers__.has_attribute_encode_return.Args": {
                "full_name": "__wrappers__.has_attribute_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(has_attribute: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.has_attribute_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.has_attribute_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.has_attribute_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.has_attribute_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.has_attribute_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.increase_attribute_balance_": {
                "decorators": [
                    "external"
                ],
                "pc": 963,
                "type": "function"
            },
            "__wrappers__.increase_attribute_balance_.Args": {
                "full_name": "__wrappers__.increase_attribute_balance_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.increase_attribute_balance_.ImplicitArgs": {
                "full_name": "__wrappers__.increase_attribute_balance_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.increase_attribute_balance_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.increase_attribute_balance_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.increase_attribute_balance_.__wrapped_func": {
                "destination": "contracts.attributes_registry.collections.increase_attribute_balance_",
                "type": "alias"
            },
            "__wrappers__.increase_attribute_balance__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.remove_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 1780,
                "type": "function"
            },
            "__wrappers__.remove_attribute.Args": {
                "full_name": "__wrappers__.remove_attribute.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.remove_attribute.ImplicitArgs": {
                "full_name": "__wrappers__.remove_attribute.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.remove_attribute.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.remove_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.remove_attribute.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.remove_attribute",
                "type": "alias"
            },
            "__wrappers__.remove_attribute_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.remove_attributes": {
                "decorators": [
                    "external"
                ],
                "pc": 1657,
                "type": "function"
            },
            "__wrappers__.remove_attributes.Args": {
                "full_name": "__wrappers__.remove_attributes.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.remove_attributes.ImplicitArgs": {
                "full_name": "__wrappers__.remove_attributes.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.remove_attributes.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.remove_attributes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.remove_attributes.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.remove_attributes",
                "type": "alias"
            },
            "__wrappers__.remove_attributes_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 551,
                "type": "function"
            },
            "__wrappers__.setRootAdmin_.Args": {
                "full_name": "__wrappers__.setRootAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.ImplicitArgs": {
                "full_name": "__wrappers__.setRootAdmin_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setRootAdmin_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setRootAdmin_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.setRootAdmin_",
                "type": "alias"
            },
            "__wrappers__.setRootAdmin__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.setSetAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 640,
                "type": "function"
            },
            "__wrappers__.setSetAddress_.Args": {
                "full_name": "__wrappers__.setSetAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setSetAddress_.ImplicitArgs": {
                "full_name": "__wrappers__.setSetAddress_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.setSetAddress_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.setSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.setSetAddress_.__wrapped_func": {
                "destination": "contracts.ecosystem.to_set.setSetAddress_",
                "type": "alias"
            },
            "__wrappers__.setSetAddress__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.token_uri": {
                "decorators": [
                    "view"
                ],
                "pc": 1914,
                "type": "function"
            },
            "__wrappers__.token_uri.Args": {
                "full_name": "__wrappers__.token_uri.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.token_uri.ImplicitArgs": {
                "full_name": "__wrappers__.token_uri.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.token_uri.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.token_uri.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.token_uri",
                "type": "alias"
            },
            "__wrappers__.token_uri_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.total_balance": {
                "decorators": [
                    "view"
                ],
                "pc": 1890,
                "type": "function"
            },
            "__wrappers__.total_balance.Args": {
                "full_name": "__wrappers__.total_balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.total_balance.ImplicitArgs": {
                "full_name": "__wrappers__.total_balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.total_balance.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.total_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.total_balance.__wrapped_func": {
                "destination": "contracts.attributes_registry.attributes.total_balance",
                "type": "alias"
            },
            "__wrappers__.total_balance_encode_return": {
                "decorators": [],
                "pc": 1881,
                "type": "function"
            },
            "__wrappers__.total_balance_encode_return.Args": {
                "full_name": "__wrappers__.total_balance_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "ret_value": {
                        "cairo_type": "(total_balance: felt)",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.total_balance_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.total_balance_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.total_balance_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.total_balance_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "__wrappers__.total_balance_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 517,
                "type": "function"
            },
            "__wrappers__.upgradeImplementation_.Args": {
                "full_name": "__wrappers__.upgradeImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.ImplicitArgs": {
                "full_name": "__wrappers__.upgradeImplementation_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.upgradeImplementation_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: felt, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "__wrappers__.upgradeImplementation_.__wrapped_func": {
                "destination": "contracts.upgrades.upgradable_mixin.upgradeImplementation_",
                "type": "alias"
            },
            "__wrappers__.upgradeImplementation__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned": {
                "type": "namespace"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.Args": {
                "full_name": "contracts.attributes_registry.attributes.AttributeAssigned.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.AttributeAssigned.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.SELECTOR": {
                "type": "const",
                "value": 284155061844247772401101230784778389090544893353014727146459325873548319548
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.emit": {
                "decorators": [],
                "pc": 1176,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.emit.Args": {
                "full_name": "contracts.attributes_registry.attributes.AttributeAssigned.emit.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "set_token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.emit.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.AttributeAssigned.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.AttributeAssigned.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved": {
                "type": "namespace"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.Args": {
                "full_name": "contracts.attributes_registry.attributes.AttributeRemoved.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.AttributeRemoved.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.SELECTOR": {
                "type": "const",
                "value": 524513062347635601836921452794261676168861660014442587206976614309242537166
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.emit": {
                "decorators": [],
                "pc": 1202,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.emit.Args": {
                "full_name": "contracts.attributes_registry.attributes.AttributeRemoved.emit.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "set_token_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.emit.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.AttributeRemoved.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.AttributeRemoved.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.ERC1155_transferability": {
                "destination": "contracts.library_erc1155.transferability.ERC1155_transferability",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.FTSpec": {
                "destination": "contracts.types.FTSpec",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.IDelegateContract": {
                "type": "namespace"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.ASSIGN_ATTRIBUTE_SELECTOR": {
                "type": "const",
                "value": 1535610145427316644684931870982612881091898950275282167882159957121719697370
            },
            "contracts.attributes_registry.attributes.IDelegateContract.Args": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.BALANCEOF__SELECTOR": {
                "type": "const",
                "value": 860149441678666248427524896045053279013825218527910784425897787231661289603
            },
            "contracts.attributes_registry.attributes.IDelegateContract.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.REMOVE_ATTRIBUTE_SELECTOR": {
                "type": "const",
                "value": 473958247392292275454455565073073937384464174365012385003384910033300843641
            },
            "contracts.attributes_registry.attributes.IDelegateContract.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.IDelegateContract.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute": {
                "decorators": [],
                "pc": 1268,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute.Args": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 7
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 9
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 8
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 5
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 10,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.assign_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 7
            },
            "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_": {
                "decorators": [],
                "pc": 1353,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_.Args": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.attributes_registry.attributes.IDelegateContract.call_contract": {
                "destination": "starkware.starknet.common.syscalls.call_contract",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.library_call": {
                "destination": "starkware.starknet.common.syscalls.library_call",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute": {
                "decorators": [],
                "pc": 1332,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute.Args": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.IDelegateContract.remove_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.attributes_registry.attributes.ShapeItem": {
                "destination": "contracts.types.ShapeItem",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._EmitAssigned": {
                "decorators": [],
                "pc": 1228,
                "type": "function"
            },
            "contracts.attributes_registry.attributes._EmitAssigned.Args": {
                "full_name": "contracts.attributes_registry.attributes._EmitAssigned.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._EmitAssigned.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes._EmitAssigned.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._EmitAssigned.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes._EmitAssigned.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes._EmitRemoved": {
                "decorators": [],
                "pc": 1248,
                "type": "function"
            },
            "contracts.attributes_registry.attributes._EmitRemoved.Args": {
                "full_name": "contracts.attributes_registry.attributes._EmitRemoved.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._EmitRemoved.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes._EmitRemoved.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._EmitRemoved.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes._EmitRemoved.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes._cumulative_balance": {
                "type": "namespace"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.Args": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes._cumulative_balance.addr": {
                "decorators": [],
                "pc": 1135,
                "type": "function"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.addr.Args": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.addr.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes._cumulative_balance.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.read": {
                "decorators": [],
                "pc": 1149,
                "type": "function"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.read.Args": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.read.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.read.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes._cumulative_balance.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.write": {
                "decorators": [],
                "pc": 1163,
                "type": "function"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.write.Args": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.write.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes._cumulative_balance.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes._cumulative_balance.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._get_admin_or_contract": {
                "destination": "contracts.attributes_registry.collections._get_admin_or_contract",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes._get_collection_id": {
                "destination": "contracts.attributes_registry.collections._get_collection_id",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.assign_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 1479,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.assign_attribute.Args": {
                "full_name": "contracts.attributes_registry.attributes.assign_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 6
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 8
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "set_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 4
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.assign_attribute.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.assign_attribute.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.assign_attribute.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.assign_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.attributes_registry.attributes.assign_attributes": {
                "decorators": [
                    "external"
                ],
                "pc": 1377,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.assign_attributes.Args": {
                "full_name": "contracts.attributes_registry.attributes.assign_attributes.Args",
                "members": {
                    "attributes": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "attributes_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "fts": {
                        "cairo_type": "contracts.types.FTSpec*",
                        "offset": 7
                    },
                    "fts_len": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "nfts": {
                        "cairo_type": "felt*",
                        "offset": 9
                    },
                    "nfts_len": {
                        "cairo_type": "felt",
                        "offset": 8
                    },
                    "set_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "shape": {
                        "cairo_type": "contracts.types.ShapeItem*",
                        "offset": 5
                    },
                    "shape_len": {
                        "cairo_type": "felt",
                        "offset": 4
                    }
                },
                "size": 10,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.assign_attributes.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.assign_attributes.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.assign_attributes.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.assign_attributes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.getSetAddress_": {
                "destination": "contracts.ecosystem.to_set.getSetAddress_",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.has_attribute": {
                "decorators": [
                    "view"
                ],
                "pc": 1802,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.has_attribute.Args": {
                "full_name": "contracts.attributes_registry.attributes.has_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.has_attribute.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.has_attribute.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.has_attribute.Return": {
                "cairo_type": "(has_attribute: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.has_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.remove_attribute": {
                "decorators": [
                    "external"
                ],
                "pc": 1688,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.remove_attribute.Args": {
                "full_name": "contracts.attributes_registry.attributes.remove_attribute.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "set_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.remove_attribute.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.remove_attribute.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.remove_attribute.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.remove_attribute.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.attributes_registry.attributes.remove_attributes": {
                "decorators": [
                    "external"
                ],
                "pc": 1632,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.remove_attributes.Args": {
                "full_name": "contracts.attributes_registry.attributes.remove_attributes.Args",
                "members": {
                    "attributes": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "attributes_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "set_owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.remove_attributes.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.remove_attributes.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.remove_attributes.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.remove_attributes.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.setSetAddress_": {
                "destination": "contracts.ecosystem.to_set.setSetAddress_",
                "type": "alias"
            },
            "contracts.attributes_registry.attributes.token_uri": {
                "decorators": [
                    "view"
                ],
                "pc": 1910,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.token_uri.Args": {
                "full_name": "contracts.attributes_registry.attributes.token_uri.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "set_token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.token_uri.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.token_uri.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.token_uri.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.token_uri.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.attributes.total_balance": {
                "decorators": [
                    "view"
                ],
                "pc": 1869,
                "type": "function"
            },
            "contracts.attributes_registry.attributes.total_balance.Args": {
                "full_name": "contracts.attributes_registry.attributes.total_balance.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.total_balance.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.attributes.total_balance.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.attributes.total_balance.Return": {
                "cairo_type": "(total_balance: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.attributes.total_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.COLLECTION_ID_MASK": {
                "type": "const",
                "value": 6277101735386680763835789423207666416102355444464034512895
            },
            "contracts.attributes_registry.collections.CONTRACT_BIT": {
                "type": "const",
                "value": 2
            },
            "contracts.attributes_registry.collections.CollectionCreated": {
                "type": "namespace"
            },
            "contracts.attributes_registry.collections.CollectionCreated.Args": {
                "full_name": "contracts.attributes_registry.collections.CollectionCreated.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.CollectionCreated.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections.CollectionCreated.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.CollectionCreated.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections.CollectionCreated.SELECTOR": {
                "type": "const",
                "value": 446393327216191391595622119568794302332134877558764704406751197633747192588
            },
            "contracts.attributes_registry.collections.CollectionCreated.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections.CollectionCreated.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.CollectionCreated.emit": {
                "decorators": [],
                "pc": 759,
                "type": "function"
            },
            "contracts.attributes_registry.collections.CollectionCreated.emit.Args": {
                "full_name": "contracts.attributes_registry.collections.CollectionCreated.emit.Args",
                "members": {
                    "admin": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "contract": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "params": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.CollectionCreated.emit.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections.CollectionCreated.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.CollectionCreated.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections.CollectionCreated.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.attributes_registry.collections.CollectionCreated.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.CollectionCreated.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.EXISTS_BIT": {
                "type": "const",
                "value": 1
            },
            "contracts.attributes_registry.collections.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._OnCollectionCreated": {
                "decorators": [],
                "pc": 786,
                "type": "function"
            },
            "contracts.attributes_registry.collections._OnCollectionCreated.Args": {
                "full_name": "contracts.attributes_registry.collections._OnCollectionCreated.Args",
                "members": {
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._OnCollectionCreated.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._OnCollectionCreated.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 3
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._OnCollectionCreated.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._OnCollectionCreated.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "contracts.attributes_registry.collections._collection_data": {
                "type": "namespace"
            },
            "contracts.attributes_registry.collections._collection_data.Args": {
                "full_name": "contracts.attributes_registry.collections._collection_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._collection_data.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._collection_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._collection_data.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections._collection_data.addr": {
                "decorators": [],
                "pc": 817,
                "type": "function"
            },
            "contracts.attributes_registry.collections._collection_data.addr.Args": {
                "full_name": "contracts.attributes_registry.collections._collection_data.addr.Args",
                "members": {
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.addr.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._collection_data.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._collection_data.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections._collection_data.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._collection_data.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._collection_data.read": {
                "decorators": [],
                "pc": 831,
                "type": "function"
            },
            "contracts.attributes_registry.collections._collection_data.read.Args": {
                "full_name": "contracts.attributes_registry.collections._collection_data.read.Args",
                "members": {
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.read.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._collection_data.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.read.Return": {
                "cairo_type": "(parameters__admin_or_contract: (felt, felt))",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._collection_data.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections._collection_data.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._collection_data.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._collection_data.write": {
                "decorators": [],
                "pc": 851,
                "type": "function"
            },
            "contracts.attributes_registry.collections._collection_data.write.Args": {
                "full_name": "contracts.attributes_registry.collections._collection_data.write.Args",
                "members": {
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "(felt, felt)",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.write.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._collection_data.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._collection_data.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._collection_data.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections._get_admin_or_contract": {
                "decorators": [],
                "pc": 996,
                "type": "function"
            },
            "contracts.attributes_registry.collections._get_admin_or_contract.Args": {
                "full_name": "contracts.attributes_registry.collections._get_admin_or_contract.Args",
                "members": {
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._get_admin_or_contract.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._get_admin_or_contract.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._get_admin_or_contract.Return": {
                "cairo_type": "(admin: felt, contract: felt)",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._get_admin_or_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections._get_collection_id": {
                "decorators": [],
                "pc": 984,
                "type": "function"
            },
            "contracts.attributes_registry.collections._get_collection_id.Args": {
                "full_name": "contracts.attributes_registry.collections._get_collection_id.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._get_collection_id.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections._get_collection_id.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.collections._get_collection_id.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections._get_collection_id.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.attributes_registry.collections._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.attributes_registry.collections.create_collection_": {
                "decorators": [
                    "external"
                ],
                "pc": 869,
                "type": "function"
            },
            "contracts.attributes_registry.collections.create_collection_.Args": {
                "full_name": "contracts.attributes_registry.collections.create_collection_.Args",
                "members": {
                    "admin_or_contract": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "collection_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "params": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.create_collection_.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections.create_collection_.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 3
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.create_collection_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections.create_collection_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.attributes_registry.collections.increase_attribute_balance_": {
                "decorators": [
                    "external"
                ],
                "pc": 929,
                "type": "function"
            },
            "contracts.attributes_registry.collections.increase_attribute_balance_.Args": {
                "full_name": "contracts.attributes_registry.collections.increase_attribute_balance_.Args",
                "members": {
                    "attribute_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "initial_balance": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.increase_attribute_balance_.ImplicitArgs": {
                "full_name": "contracts.attributes_registry.collections.increase_attribute_balance_.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 2
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.attributes_registry.collections.increase_attribute_balance_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.attributes_registry.collections.increase_attribute_balance_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "contracts.ecosystem.to_set.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address": {
                "type": "namespace"
            },
            "contracts.ecosystem.to_set._set_address.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set._set_address.addr": {
                "decorators": [],
                "pc": 570,
                "type": "function"
            },
            "contracts.ecosystem.to_set._set_address.addr.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.addr.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set._set_address.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.read": {
                "decorators": [],
                "pc": 575,
                "type": "function"
            },
            "contracts.ecosystem.to_set._set_address.read.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.read.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.read.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set._set_address.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.ecosystem.to_set._set_address.write": {
                "decorators": [],
                "pc": 588,
                "type": "function"
            },
            "contracts.ecosystem.to_set._set_address.write.Args": {
                "full_name": "contracts.ecosystem.to_set._set_address.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.write.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set._set_address.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set._set_address.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set._set_address.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set.getSetAddress_": {
                "decorators": [
                    "view"
                ],
                "pc": 600,
                "type": "function"
            },
            "contracts.ecosystem.to_set.getSetAddress_.Args": {
                "full_name": "contracts.ecosystem.to_set.getSetAddress_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.getSetAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set.getSetAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.getSetAddress_.Return": {
                "cairo_type": "(address: felt)",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set.getSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.ecosystem.to_set.setSetAddress_": {
                "decorators": [
                    "external"
                ],
                "pc": 631,
                "type": "function"
            },
            "contracts.ecosystem.to_set.setSetAddress_.Args": {
                "full_name": "contracts.ecosystem.to_set.setSetAddress_.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.setSetAddress_.ImplicitArgs": {
                "full_name": "contracts.ecosystem.to_set.setSetAddress_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.ecosystem.to_set.setSetAddress_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.ecosystem.to_set.setSetAddress_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ApprovalForAll": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Args": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ApprovalForAll.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SELECTOR": {
                "type": "const",
                "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ApprovalForAll.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Args": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals.ERC1155_approvals.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals.ERC1155_approvals.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all": {
                "type": "namespace"
            },
            "contracts.library_erc1155.approvals._approval_all.Args": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.approvals._approval_all.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.approvals._approval_all.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.approvals._approval_all.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.approvals._approval_all.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._approval_all.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._balance": {
                "destination": "contracts.library_erc1155.balance._balance",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals._only": {
                "destination": "contracts.utilities.authorization._only",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.approvals.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.ERC1155_balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance": {
                "decorators": [],
                "pc": 730,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._decreaseBalance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance": {
                "decorators": [],
                "pc": 711,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Args",
                "members": {
                    "number": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance._increaseBalance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_": {
                "decorators": [],
                "pc": 751,
                "type": "function"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Args": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance.ERC1155_balance.balanceOf_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance": {
                "type": "namespace"
            },
            "contracts.library_erc1155.balance._balance.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.addr": {
                "decorators": [],
                "pc": 665,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.addr.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.read": {
                "decorators": [],
                "pc": 682,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.read.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.read.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.read.Return": {
                "cairo_type": "(balance: felt)",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance._balance.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.library_erc1155.balance._balance.write": {
                "decorators": [],
                "pc": 697,
                "type": "function"
            },
            "contracts.library_erc1155.balance._balance.write.Args": {
                "full_name": "contracts.library_erc1155.balance._balance.write.Args",
                "members": {
                    "owner": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.balance._balance.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.balance._balance.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.balance._balance.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.balance.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.balance.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_approvals": {
                "destination": "contracts.library_erc1155.approvals.ERC1155_approvals",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_balance": {
                "destination": "contracts.library_erc1155.balance.ERC1155_balance",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer": {
                "decorators": [],
                "pc": 1072,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Args",
                "members": {
                    "amount": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._onTransfer.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable": {
                "decorators": [],
                "pc": 1099,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable.Args": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable.Args",
                "members": {
                    "recipient": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "sender": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.ERC1155_transferability._transfer_burnable.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferBatch.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferBatch.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferBatch.SELECTOR": {
                "type": "const",
                "value": 1056950791786541247294868560104033725539105339983750763525460393405057551112
            },
            "contracts.library_erc1155.transferability.TransferBatch.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferBatch.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferBatch.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle": {
                "type": "namespace"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.SELECTOR": {
                "type": "const",
                "value": 683496163923431355190492689148098320408454942853027468141918222244294018099
            },
            "contracts.library_erc1155.transferability.TransferSingle.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.library_erc1155.transferability.TransferSingle.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit": {
                "decorators": [],
                "pc": 1042,
                "type": "function"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Args": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.Args",
                "members": {
                    "_from": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "_id": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 3
                    },
                    "_operator": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "_to": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "_value": {
                        "cairo_type": "starkware.cairo.common.uint256.Uint256",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs": {
                "full_name": "contracts.library_erc1155.transferability.TransferSingle.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.library_erc1155.transferability.TransferSingle.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.TransferSingle.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability._felt_to_uint": {
                "destination": "contracts.utilities.Uint256_felt_conv._felt_to_uint",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_equal": {
                "destination": "starkware.cairo.common.math.assert_not_equal",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "contracts.library_erc1155.transferability.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.types.BalanceSpec": {
                "full_name": "contracts.types.BalanceSpec",
                "members": {
                    "balance": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.FTSpec": {
                "full_name": "contracts.types.FTSpec",
                "members": {
                    "qty": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.NFTSpec": {
                "full_name": "contracts.types.NFTSpec",
                "members": {
                    "material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "token_id": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.ShapeItem": {
                "full_name": "contracts.types.ShapeItem",
                "members": {
                    "color_nft_material": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_y_z": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin._onlyAdmin": {
                "destination": "contracts.utilities.authorization._onlyAdmin",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_": {
                "decorators": [
                    "view"
                ],
                "pc": 440,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_": {
                "decorators": [
                    "view"
                ],
                "pc": 471,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.getImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.getImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_": {
                "decorators": [
                    "external"
                ],
                "pc": 536,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.setRootAdmin_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.setRootAdmin_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_": {
                "decorators": [
                    "external"
                ],
                "pc": 502,
                "type": "function"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs": {
                "full_name": "contracts.upgrades.upgradable_mixin.upgradeImplementation_.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.upgrades.upgradable_mixin.upgradeImplementation_.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.Uint256": {
                "destination": "starkware.cairo.common.uint256.Uint256",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint": {
                "decorators": [],
                "pc": 1028,
                "type": "function"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs": {
                "full_name": "contracts.utilities.Uint256_felt_conv._felt_to_uint.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.Return": {
                "cairo_type": "(value: starkware.cairo.common.uint256.Uint256)",
                "type": "type_definition"
            },
            "contracts.utilities.Uint256_felt_conv._felt_to_uint.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.Uint256_felt_conv.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt": {
                "destination": "starkware.cairo.common.math.assert_lt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.high_bit_max": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "contracts.utilities.Uint256_felt_conv.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.split_felt": {
                "destination": "starkware.cairo.common.math.split_felt",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.uint256_check": {
                "destination": "starkware.cairo.common.uint256.uint256_check",
                "type": "alias"
            },
            "contracts.utilities.Uint256_felt_conv.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "contracts.utilities.authorization.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.utilities.authorization.Proxy": {
                "destination": "contracts.vendor.openzeppelin.upgrades.library.Proxy",
                "type": "alias"
            },
            "contracts.utilities.authorization._only": {
                "decorators": [],
                "pc": 394,
                "type": "function"
            },
            "contracts.utilities.authorization._only.Args": {
                "full_name": "contracts.utilities.authorization._only.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.utilities.authorization._only.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._only.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._only.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._only.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization._onlyAdmin": {
                "decorators": [],
                "pc": 412,
                "type": "function"
            },
            "contracts.utilities.authorization._onlyAdmin.Args": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.ImplicitArgs": {
                "full_name": "contracts.utilities.authorization._onlyAdmin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.utilities.authorization._onlyAdmin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.utilities.authorization._onlyAdmin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.utilities.authorization.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SELECTOR": {
                "type": "const",
                "value": 509549417648223859179470485411643110789099628436608877343164389163677637013
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit": {
                "decorators": [],
                "pc": 245,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Args",
                "members": {
                    "newAdmin": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "previousAdmin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.AdminChanged.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin": {
                "decorators": [],
                "pc": 355,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Args",
                "members": {
                    "new_admin": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash": {
                "decorators": [],
                "pc": 376,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Args",
                "members": {
                    "new_implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy._set_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin": {
                "decorators": [],
                "pc": 330,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.assert_only_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin": {
                "decorators": [],
                "pc": 349,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash": {
                "decorators": [],
                "pc": 343,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy.get_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr": {
                "decorators": [],
                "pc": 300,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read": {
                "decorators": [],
                "pc": 305,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.Return": {
                "cairo_type": "(admin: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write": {
                "decorators": [],
                "pc": 318,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_admin.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr": {
                "decorators": [],
                "pc": 270,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.addr.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read": {
                "decorators": [],
                "pc": 275,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.Return": {
                "cairo_type": "(implementation: felt)",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write": {
                "decorators": [],
                "pc": 288,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.ImplicitArgs",
                "members": {
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_implementation_hash.write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.hash2": {
                "destination": "starkware.cairo.common.hash.hash2",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.normalize_address": {
                "destination": "starkware.starknet.common.storage.normalize_address",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_read": {
                "destination": "starkware.starknet.common.syscalls.storage_read",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Proxy_initialized.storage_write": {
                "destination": "starkware.starknet.common.syscalls.storage_write",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded": {
                "type": "namespace"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SELECTOR": {
                "type": "const",
                "value": 1291924484015741933195105472014600539495279993452337828418116470835452386035
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit": {
                "decorators": [],
                "pc": 221,
                "type": "function"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Args",
                "members": {
                    "implementation": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs": {
                "full_name": "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.emit_event": {
                "destination": "starkware.starknet.common.syscalls.emit_event",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.Upgraded.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.vendor.openzeppelin.upgrades.library.get_caller_address": {
                "destination": "starkware.starknet.common.syscalls.get_caller_address",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bitwise.bitwise_and": {
                "decorators": [],
                "pc": 659,
                "type": "function"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Args": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Return": {
                "cairo_type": "(x_and_y: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.bitwise.bitwise_and.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
                "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.hash.hash2": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.hash.hash2.Args": {
                "full_name": "starkware.cairo.common.hash.hash2.Args",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.ImplicitArgs": {
                "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
                "members": {
                    "hash_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.hash.hash2.Return": {
                "cairo_type": "(result: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_250_bit": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 83,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_250_bit.Args": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
                "type": "const",
                "value": 5316911983139663491615228241121378304
            },
            "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_250_bit.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_250_bit.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
                "type": "const",
                "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
            },
            "starkware.cairo.common.math.assert_250_bit.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 83,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 83,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_250_bit.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_250_bit.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 11,
                            "offset": 0
                        },
                        "pc": 83,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 78,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 125,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 125,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 125,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 125,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 8
                        },
                        "pc": 135,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 149,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 161,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 170,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 170,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 0
                        },
                        "pc": 170,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 74,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 74,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 69,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 69,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 96,
                "type": "function"
            },
            "starkware.cairo.common.math.split_felt.Args": {
                "full_name": "starkware.cairo.common.math.split_felt.Args",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_felt.MAX_HIGH": {
                "type": "const",
                "value": 10633823966279327296825105735305134080
            },
            "starkware.cairo.common.math.split_felt.MAX_LOW": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.Return": {
                "cairo_type": "(high: felt, low: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_felt.high": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.high",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 96,
                        "value": "[cast([fp + (-4)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.low": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.low",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 96,
                        "value": "[cast([fp + (-4)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_felt.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_felt.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 96,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 9,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 3
                        },
                        "pc": 16,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 2,
                            "offset": 0
                        },
                        "pc": 9,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 14,
                "type": "label"
            },
            "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
                "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.ALL_ONES": {
                "type": "const",
                "value": 340282366920938463463374607431768211455
            },
            "starkware.cairo.common.uint256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.HALF_SHIFT": {
                "type": "const",
                "value": 18446744073709551616
            },
            "starkware.cairo.common.uint256.SHIFT": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.uint256.Uint256": {
                "full_name": "starkware.cairo.common.uint256.Uint256",
                "members": {
                    "high": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "low": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.uint256.assert_in_range": {
                "destination": "starkware.cairo.common.math.assert_in_range",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_or": {
                "destination": "starkware.cairo.common.bitwise.bitwise_or",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.bitwise_xor": {
                "destination": "starkware.cairo.common.bitwise.bitwise_xor",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.is_le": {
                "destination": "starkware.cairo.common.math_cmp.is_le",
                "type": "alias"
            },
            "starkware.cairo.common.uint256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.normalize_address": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 181,
                "type": "function"
            },
            "starkware.starknet.common.storage.normalize_address.Args": {
                "full_name": "starkware.starknet.common.storage.normalize_address.Args",
                "members": {
                    "addr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.storage.normalize_address.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.normalize_address.addr": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.addr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 0
                        },
                        "pc": 181,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_250": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 2
                        },
                        "pc": 201,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.storage.normalize_address.is_small": {
                "cairo_type": "felt",
                "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 15,
                            "offset": 1
                        },
                        "pc": 183,
                        "value": "[cast(ap + (-1), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
                "type": "const",
                "value": 25500403217443378527601783667
            },
            "starkware.starknet.common.syscalls.ReplaceClass": {
                "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.call_contract.Args": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.call_contract.Return": {
                "cairo_type": "(retdata_size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "pc": 24,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 1
                        },
                        "pc": 31,
                        "value": "cast([fp + (-7)] + 7, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.emit_event": {
                "decorators": [],
                "pc": 59,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.emit_event.Args": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.emit_event.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 59,
                        "value": "[cast(fp + (-7), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 1
                        },
                        "pc": 66,
                        "value": "cast([fp + (-7)] + 5, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.get_caller_address": {
                "decorators": [],
                "pc": 36,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Args": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.get_caller_address.Return": {
                "cairo_type": "(caller_address: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 36,
                        "value": "[cast(fp + (-3), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 1
                        },
                        "pc": 39,
                        "value": "cast([fp + (-3)] + 2, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_read": {
                "decorators": [],
                "pc": 43,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_read.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_read.Return": {
                "cairo_type": "(value: felt)",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "pc": 43,
                        "value": "[cast(fp + (-4), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 1
                        },
                        "pc": 47,
                        "value": "cast([fp + (-4)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.starknet.common.syscalls.storage_write": {
                "decorators": [],
                "pc": 51,
                "type": "function"
            },
            "starkware.starknet.common.syscalls.storage_write.Args": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
                "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.storage_write.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
                "cairo_type": "felt*",
                "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 0
                        },
                        "pc": 51,
                        "value": "[cast(fp + (-5), felt**)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 6,
                            "offset": 1
                        },
                        "pc": 56,
                        "value": "cast([fp + (-5)] + 3, felt*)"
                    }
                ],
                "type": "reference"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 9,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 3
                    },
                    "pc": 16,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 36,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 43,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 51,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 59,
                    "value": "[cast(fp + (-7), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 69,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 74,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 83,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 83,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 83,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 96,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 96,
                    "value": "[cast([fp + (-4)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 96,
                    "value": "[cast([fp + (-4)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 125,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 125,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 125,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 170,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 170,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 181,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 1
                    },
                    "pc": 183,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 2
                    },
                    "pc": 201,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ]
        }
    }
}
